"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[611],{5611:(t,e,a)=>{a.d(e,{clientDataService:()=>s});let r={PROJECTS:"RoadmapProjects",CATEGORIES:"RoadmapCategories",FIELD_TYPES:"RoadmapFieldTypes",FIELDS:"RoadmapFields",TEAM_MEMBERS:"RoadmapTeamMembers",USERS:"RoadmapUsers"};class o{getWebUrl(){try{let t=window.location.origin,e=window.location.pathname.split("/"),a=e.findIndex(t=>"roadmap"===t.toLowerCase()||"roadmap-app"===t.toLowerCase());if(-1!==a){let r=e.slice(0,a+1).join("/");return t+r}}catch(t){console.error("Error determining SharePoint web URL:",t)}return"https://spi-u.intranet.bs.ch/JSD/QMServices/Roadmap"}async getRequestDigest(){let t=Date.now();if(this.requestDigestCache&&this.requestDigestCache.expiration>t)return this.requestDigestCache.value;try{let e=this.getWebUrl(),a=await fetch("".concat(e,"/_api/contextinfo"),{method:"POST",headers:{Accept:"application/json;odata=nometadata"},credentials:"same-origin"});if(!a.ok){let t=await a.text();throw console.error("Request Digest Error Response:",{status:a.status,statusText:a.statusText,url:a.url,body:t}),Error("Failed to get request digest: ".concat(a.statusText))}let r=await a.json(),o=r.FormDigestValue,s=1e3*r.FormDigestTimeoutSeconds;return this.requestDigestCache={value:o,expiration:t+s-6e4},o}catch(t){throw console.error("Error getting request digest:",t),t}}async fetchFromSharePoint(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"*",a=this.getWebUrl(),r="".concat(a,"/_api/web/lists/getByTitle('").concat(t,"')/items?$select=").concat(e);try{let t=await fetch(r,{method:"GET",headers:{Accept:"application/json;odata=nometadata"},credentials:"same-origin"});if(!t.ok){let e=await t.text();throw console.error("SharePoint API Error Response:",{status:t.status,statusText:t.statusText,url:t.url,body:e}),Error("SharePoint request failed: ".concat(t.statusText))}return(await t.json()).value||[]}catch(e){throw console.error("Error fetching from SharePoint list ".concat(t,":"),e),e}}async getListMetadata(t){if(this.metadataCache[t])return this.metadataCache[t];try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(t,"')?$select=ListItemEntityTypeFullName"),r=await fetch(a,{method:"GET",headers:{Accept:"application/json;odata=nometadata"},credentials:"same-origin"});if(!r.ok){let t=await r.text();throw console.error("List Metadata Error Response:",{status:r.status,statusText:r.statusText,url:r.url,body:t}),Error("Failed to get list metadata: ".concat(r.statusText))}let o=(await r.json()).ListItemEntityTypeFullName;return this.metadataCache[t]=o,o}catch(a){console.error("Error getting metadata for list ".concat(t,":"),a);let e="SP.Data.".concat(t,"ListItem");return this.metadataCache[t]=e,e}}getListItemType(t){let e=t.replace(/\s/g,"_x0020_");return"SP.Data.".concat(e,"ListItem")}async getAllProjects(){try{return(await this.fetchFromSharePoint(r.PROJECTS,"Id,Title,Category,StartQuarter,EndQuarter,Description,Status,Projektleitung,Bisher,Zukunft,Fortschritt,GeplantUmsetzung,Budget")).map(t=>{var e;return{id:t.Id.toString(),title:t.Title,category:t.Category,startQuarter:t.StartQuarter,endQuarter:t.EndQuarter,description:t.Description||"",status:(null===(e=t.Status)||void 0===e?void 0:e.toLowerCase())||"planned",projektleitung:t.Projektleitung||"",bisher:t.Bisher||"",zukunft:t.Zukunft||"",fortschritt:t.Fortschritt||0,geplante_umsetzung:t.GeplantUmsetzung||"",budget:t.Budget||""}})}catch(t){return console.error("Error fetching projects:",t),[]}}async getProjectById(t){try{var e;let a=this.getWebUrl(),o="".concat(a,"/_api/web/lists/getByTitle('").concat(r.PROJECTS,"')/items(").concat(t,")?$select=Id,Title,Category,StartQuarter,EndQuarter,Description,Status,Projektleitung,Bisher,Zukunft,Fortschritt,GeplantUmsetzung,Budget"),s=await fetch(o,{method:"GET",headers:{Accept:"application/json;odata=nometadata"},credentials:"same-origin"});if(!s.ok){let t=await s.text();throw console.error("Project Fetch Error Response:",{status:s.status,statusText:s.statusText,url:s.url,body:t}),Error("Failed to fetch project: ".concat(s.statusText))}let i=await s.json();return{id:i.Id.toString(),title:i.Title,category:i.Category,startQuarter:i.StartQuarter,endQuarter:i.EndQuarter,description:i.Description||"",status:(null===(e=i.Status)||void 0===e?void 0:e.toLowerCase())||"planned",projektleitung:i.Projektleitung||"",bisher:i.Bisher||"",zukunft:i.Zukunft||"",fortschritt:i.Fortschritt||0,geplante_umsetzung:i.GeplantUmsetzung||"",budget:i.Budget||""}}catch(e){return console.error("Error fetching project ".concat(t,":"),e),null}}async deleteProject(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.PROJECTS,"')/items(").concat(t,")"),o=await this.getRequestDigest(),s=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"DELETE","IF-MATCH":"*","X-RequestDigest":o},credentials:"same-origin"});if(!s.ok){let t=await s.text();throw console.error("Project Delete Error Response:",{status:s.status,statusText:s.statusText,url:s.url,body:t}),Error("Failed to delete project: ".concat(s.statusText))}await this.deleteTeamMembersForProject(t),await this.deleteFieldsForProject(t)}catch(e){throw console.error("Error deleting project ".concat(t,":"),e),e}}async getAllCategories(){try{return(await this.fetchFromSharePoint(r.CATEGORIES,"Id,Title,Color,Icon,ParentCategoryId,IsSubcategory")).map(t=>({id:t.Id.toString(),name:t.Title,color:t.Color,icon:t.Icon||"",parentId:t.ParentCategoryId?t.ParentCategoryId.toString():void 0,isSubcategory:!0===t.IsSubcategory}))}catch(t){return console.error("Error fetching categories:",t),[]}}async getCategoryById(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.CATEGORIES,"')/items(").concat(t,")?$select=Id,Title,Color,Icon,ParentCategoryId,IsSubcategory"),o=await fetch(a,{method:"GET",headers:{Accept:"application/json;odata=nometadata"},credentials:"same-origin"});if(!o.ok){let t=await o.text();throw console.error("Category Fetch Error Response:",{status:o.status,statusText:o.statusText,url:o.url,body:t}),Error("Failed to fetch category: ".concat(o.statusText))}let s=await o.json();return{id:s.Id.toString(),name:s.Title,color:s.Color,icon:s.Icon||"",parentId:s.ParentCategoryId?s.ParentCategoryId.toString():void 0,isSubcategory:!0===s.IsSubcategory}}catch(e){return console.error("Error fetching category ".concat(t,":"),e),null}}async getAllFieldTypes(){try{return(await this.fetchFromSharePoint(r.FIELD_TYPES,"Id,Title,Type,Description")).map(t=>({id:t.Id.toString(),name:t.Title,type:t.Type,description:t.Description||""}))}catch(t){return console.error("Error fetching field types:",t),[]}}async getFieldTypeById(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.FIELD_TYPES,"')/items(").concat(t,")?$select=Id,Title,Type,Description"),o=await fetch(a,{method:"GET",headers:{Accept:"application/json;odata=nometadata"},credentials:"same-origin"});if(!o.ok){let t=await o.text();throw console.error("Field Type Fetch Error Response:",{status:o.status,statusText:o.statusText,url:o.url,body:t}),Error("Failed to fetch field type: ".concat(o.statusText))}let s=await o.json();return{id:s.Id.toString(),name:s.Title,type:s.Type,description:s.Description||""}}catch(e){return console.error("Error fetching field type ".concat(t,":"),e),null}}async getTeamMembersByProjectId(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.TEAM_MEMBERS,"')/items?$filter=ProjectId eq '").concat(t,"'&$select=Id,Title,Role,ProjectId"),o=await fetch(a,{method:"GET",headers:{Accept:"application/json;odata=nometadata"},credentials:"same-origin"});if(!o.ok){let t=await o.text();throw console.error("Team Members Fetch Error Response:",{status:o.status,statusText:o.statusText,url:o.url,body:t}),Error("Failed to fetch team members: ".concat(o.statusText))}return((await o.json()).value||[]).map(t=>({id:t.Id.toString(),name:t.Title,role:t.Role,projectId:t.ProjectId}))}catch(e){return console.error("Error fetching team members for project ".concat(t,":"),e),[]}}async createTeamMember(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.TEAM_MEMBERS,"')/items"),o=await this.getListMetadata(r.TEAM_MEMBERS),s=await this.getRequestDigest(),i=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-RequestDigest":s},body:JSON.stringify({__metadata:{type:o},Title:t.name,Role:t.role,ProjectId:t.projectId}),credentials:"same-origin"});if(!i.ok){let t=await i.text();throw console.error("Team Member Create Error Response:",{status:i.status,statusText:i.statusText,url:i.url,body:t}),Error("Failed to create team member: ".concat(i.statusText))}let n=await i.json();return{...t,id:n.Id.toString()}}catch(t){throw console.error("Error creating team member:",t),t}}async deleteTeamMembersForProject(t){try{for(let e of(await this.getTeamMembersByProjectId(t))){let t=this.getWebUrl(),a="".concat(t,"/_api/web/lists/getByTitle('").concat(r.TEAM_MEMBERS,"')/items(").concat(e.id,")"),o=await this.getRequestDigest(),s=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"DELETE","IF-MATCH":"*","X-RequestDigest":o},credentials:"same-origin"});if(!s.ok){let t=await s.text();throw console.error("Team Member Delete Error Response:",{status:s.status,statusText:s.statusText,url:s.url,body:t}),Error("Failed to delete team member: ".concat(s.statusText))}}}catch(e){throw console.error("Error deleting team members for project ".concat(t,":"),e),e}}async getFieldsByProjectId(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.FIELDS,"')/items?$filter=ProjectId eq '").concat(t,"'&$select=Id,Type,Value,ProjectId"),o=await fetch(a,{method:"GET",headers:{Accept:"application/json;odata=nometadata"},credentials:"same-origin"});if(!o.ok){let t=await o.text();throw console.error("Fields Fetch Error Response:",{status:o.status,statusText:o.statusText,url:o.url,body:t}),Error("Failed to fetch fields: ".concat(o.statusText))}return((await o.json()).value||[]).map(t=>({id:t.Id.toString(),type:t.Type,value:t.Value,projectId:t.ProjectId}))}catch(e){return console.error("Error fetching fields for project ".concat(t,":"),e),[]}}async createField(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.FIELDS,"')/items"),o=await this.getListMetadata(r.FIELDS),s=await this.getRequestDigest(),i=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-RequestDigest":s},body:JSON.stringify({__metadata:{type:o},Type:t.type,Value:t.value,ProjectId:t.projectId}),credentials:"same-origin"});if(!i.ok){let e=await i.text();throw console.error("Field Create Error Response:",{status:i.status,statusText:i.statusText,url:i.url,body:e,requestBody:JSON.stringify({Type:t.type,Value:t.value,ProjectId:t.projectId})}),Error("Failed to create field: ".concat(i.statusText))}let n=await i.json();return{...t,id:n.Id.toString()}}catch(t){throw console.error("Error creating field:",t),t}}async deleteFieldsForProject(t){try{for(let e of(await this.getFieldsByProjectId(t))){let t=this.getWebUrl(),a="".concat(t,"/_api/web/lists/getByTitle('").concat(r.FIELDS,"')/items(").concat(e.id,")"),o=await this.getRequestDigest(),s=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"DELETE","IF-MATCH":"*","X-RequestDigest":o},credentials:"same-origin"});if(!s.ok){let t=await s.text();throw console.error("Field Delete Error Response:",{status:s.status,statusText:s.statusText,url:s.url,body:t}),Error("Failed to delete field: ".concat(s.statusText))}}}catch(e){throw console.error("Error deleting fields for project ".concat(t,":"),e),e}}async createCategory(t){let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.CATEGORIES,"')/items"),o=await this.getListMetadata(r.CATEGORIES),s=await this.getRequestDigest(),i=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=verbose","Content-Type":"application/json;odata=verbose","X-RequestDigest":s,"X-HTTP-Method":"POST"},body:JSON.stringify({__metadata:{type:o},Title:t.name,Color:t.color,Icon:t.icon||"",ParentCategoryId:t.parentId||null,IsSubcategory:!!t.parentId})});if(!i.ok)throw Error("Failed to create category: ".concat(i.statusText));let n=await i.json();return this.mapCategoryFromSharePoint(n.d)}mapCategoryFromSharePoint(t){var e,a;return{id:(null===(e=t.ID)||void 0===e?void 0:e.toString())||(null===(a=t.Id)||void 0===a?void 0:a.toString()),name:t.Title,color:t.Color||"#000000",icon:t.Icon||"",parentId:t.ParentCategoryId?t.ParentCategoryId.toString():void 0,isSubcategory:!0===t.IsSubcategory}}async updateCategory(t,e){try{let a=this.getWebUrl(),o="".concat(a,"/_api/web/lists/getByTitle('").concat(r.CATEGORIES,"')/items(").concat(t,")"),s=await this.getListMetadata(r.CATEGORIES),i=await this.getRequestDigest(),n={__metadata:{type:s}};e.name&&(n.Title=e.name),e.color&&(n.Color=e.color),void 0!==e.icon&&(n.Icon=e.icon),void 0!==e.parentId&&(n.ParentCategoryId=e.parentId||null,n.IsSubcategory=!!e.parentId);let c=await fetch(o,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"MERGE","IF-MATCH":"*","X-RequestDigest":i},body:JSON.stringify(n),credentials:"same-origin"});if(!c.ok){let t=await c.text();throw console.error("Category Update Error Response:",{status:c.status,statusText:c.statusText,url:c.url,body:t,requestBody:JSON.stringify(n)}),Error("Failed to update category: ".concat(c.statusText))}}catch(e){throw console.error("Error updating category ".concat(t,":"),e),e}}async deleteCategory(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.CATEGORIES,"')/items(").concat(t,")"),o=await this.getRequestDigest(),s=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"DELETE","IF-MATCH":"*","X-RequestDigest":o},credentials:"same-origin"});if(!s.ok){let t=await s.text();throw console.error("Category Delete Error Response:",{status:s.status,statusText:s.statusText,url:s.url,body:t}),Error("Failed to delete category: ".concat(s.statusText))}}catch(e){throw console.error("Error deleting category ".concat(t,":"),e),e}}async createFieldType(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.FIELD_TYPES,"')/items"),o=await this.getListMetadata(r.FIELD_TYPES),s=await this.getRequestDigest(),i=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-RequestDigest":s},body:JSON.stringify({__metadata:{type:o},Title:t.name,Type:t.type,Description:t.description||""}),credentials:"same-origin"});if(!i.ok){let e=await i.text();throw console.error("Field Type Create Error Response:",{status:i.status,statusText:i.statusText,url:i.url,body:e,requestBody:JSON.stringify({Title:t.name,Type:t.type,Description:t.description||""})}),Error("Failed to create field type: ".concat(i.statusText))}return{id:(await i.json()).Id.toString(),name:t.name,type:t.type,description:t.description||""}}catch(t){throw console.error("Error creating field type:",t),t}}async updateFieldType(t,e){try{let a=this.getWebUrl(),o="".concat(a,"/_api/web/lists/getByTitle('").concat(r.FIELD_TYPES,"')/items(").concat(t,")"),s=await this.getListMetadata(r.FIELD_TYPES),i=await this.getRequestDigest(),n={__metadata:{type:s}};e.name&&(n.Title=e.name),e.type&&(n.Type=e.type),void 0!==e.description&&(n.Description=e.description);let c=await fetch(o,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"MERGE","IF-MATCH":"*","X-RequestDigest":i},body:JSON.stringify(n),credentials:"same-origin"});if(!c.ok){let t=await c.text();throw console.error("Field Type Update Error Response:",{status:c.status,statusText:c.statusText,url:c.url,body:t,requestBody:JSON.stringify(n)}),Error("Failed to update field type: ".concat(c.statusText))}}catch(e){throw console.error("Error updating field type ".concat(t,":"),e),e}}async deleteFieldType(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.FIELD_TYPES,"')/items(").concat(t,")"),o=await this.getRequestDigest(),s=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"DELETE","IF-MATCH":"*","X-RequestDigest":o},credentials:"same-origin"});if(!s.ok){let t=await s.text();throw console.error("Field Type Delete Error Response:",{status:s.status,statusText:s.statusText,url:s.url,body:t}),Error("Failed to delete field type: ".concat(s.statusText))}}catch(e){throw console.error("Error deleting field type ".concat(t,":"),e),e}}async createProject(t){try{let e;let a=this.getWebUrl(),o="".concat(a,"/_api/web/lists/getByTitle('").concat(r.PROJECTS,"')/items"),s=await this.getListMetadata(r.PROJECTS),i=await this.getRequestDigest(),n=parseFloat(t.fortschritt.toString());console.log("Creating project with data:",{Title:t.title,Category:t.category,StartQuarter:t.startQuarter,EndQuarter:t.endQuarter,Description:t.description||"",Status:t.status.toUpperCase(),Projektleitung:t.projektleitung||"",Bisher:t.bisher||"",Zukunft:t.zukunft||"",Fortschritt:n,GeplantUmsetzung:t.geplante_umsetzung||"",Budget:t.budget||""});let c=await fetch(o,{method:"POST",headers:{Accept:"application/json;odata=verbose","Content-Type":"application/json;odata=verbose","X-RequestDigest":i},body:JSON.stringify({__metadata:{type:s},Title:t.title,Category:t.category,StartQuarter:t.startQuarter,EndQuarter:t.endQuarter,Description:t.description||"",Status:t.status.toUpperCase(),Projektleitung:t.projektleitung||"",Bisher:t.bisher||"",Zukunft:t.zukunft||"",Fortschritt:n,GeplantUmsetzung:t.geplante_umsetzung||"",Budget:t.budget||""}),credentials:"include"});if(!c.ok){let e=await c.text();throw console.error("Project Create Error Response:",{status:c.status,statusText:c.statusText,url:c.url,body:e,requestBody:JSON.stringify({Title:t.title,Category:t.category,StartQuarter:t.startQuarter,EndQuarter:t.endQuarter,Description:t.description||"",Status:t.status.toUpperCase(),Projektleitung:t.projektleitung||"",Bisher:t.bisher||"",Zukunft:t.zukunft||"",Fortschritt:n,GeplantUmsetzung:t.geplante_umsetzung||"",Budget:t.budget||""})}),Error("Failed to create project: ".concat(c.statusText))}let l=await c.json();if(console.log("Project creation result:",JSON.stringify(l,null,2)),l.d&&l.d.Id)e=l.d.Id.toString();else if(l.Id)e=l.Id.toString();else if(l.id)e=l.id.toString();else{console.error("Unexpected response format:",l);let t=e=>{if(!e||"object"!=typeof e)return null;if(e.Id)return e.Id.toString();if(e.id)return e.id.toString();for(let a in e){let r=t(e[a]);if(r)return r}return null};if(!(e=t(l)))throw Error("Could not find project ID in response")}if(console.log("Using project ID:",e),t.teamMembers&&t.teamMembers.length>0){for(let a of t.teamMembers)if(a.name&&a.role)try{await this.createTeamMember({name:a.name,role:a.role,projectId:e})}catch(t){console.error("Error creating team member ".concat(a.name,":"),t)}}if(t.fields){if(t.fields.process){for(let a of t.fields.process)if(a)try{await this.createField({type:"PROCESS",value:a,projectId:e})}catch(t){console.error("Error creating process field ".concat(a,":"),t)}}if(t.fields.technology){for(let a of t.fields.technology)if(a)try{await this.createField({type:"TECHNOLOGY",value:a,projectId:e})}catch(t){console.error("Error creating technology field ".concat(a,":"),t)}}if(t.fields.services){for(let a of t.fields.services)if(a)try{await this.createField({type:"SERVICE",value:a,projectId:e})}catch(t){console.error("Error creating service field ".concat(a,":"),t)}}if(t.fields.data){for(let a of t.fields.data)if(a)try{await this.createField({type:"DATA",value:a,projectId:e})}catch(t){console.error("Error creating data field ".concat(a,":"),t)}}}return{id:e,title:t.title,category:t.category,startQuarter:t.startQuarter,endQuarter:t.endQuarter,description:t.description||"",status:t.status,projektleitung:t.projektleitung||"",bisher:t.bisher||"",zukunft:t.zukunft||"",fortschritt:t.fortschritt,geplante_umsetzung:t.geplante_umsetzung||"",budget:t.budget||""}}catch(t){throw console.error("Error creating project:",t),t}}async getCurrentUser(){try{let t=this.getWebUrl(),e=await fetch("".concat(t,"/_api/web/currentuser?$select=Id,Title,Email,IsSiteAdmin,LoginName,UserPrincipalName"),{method:"GET",headers:{Accept:"application/json;odata=verbose"},credentials:"include"});if(!e.ok){let t=await e.text();throw console.error("Current User Fetch Error:",{status:e.status,statusText:e.statusText,url:e.url,body:t}),Error("Failed to fetch current user: ".concat(e.statusText))}return(await e.json()).d}catch(t){throw console.error("Error fetching current user:",t),t}}async isCurrentUserAdmin(){try{let t=await this.getCurrentUser();if(t.IsSiteAdmin)return!0;return(await this.getAdminUsers()).some(e=>e.email.toLowerCase()===t.Email.toLowerCase()||e.loginName===t.LoginName)}catch(t){return console.error("Error checking admin status:",t),!1}}async getAdminUsers(){try{return(await this.fetchFromSharePoint(r.USERS,"Id,Email,LoginName,Role")).filter(t=>"admin"===t.Role).map(t=>({id:t.Id.toString(),email:t.Email,loginName:t.LoginName||""}))}catch(t){return console.error("Error fetching admin users:",t),[]}}async updateProject(t,e){try{let a=this.getWebUrl(),o="".concat(a,"/_api/web/lists/getByTitle('").concat(r.PROJECTS,"')/items(").concat(t,")"),s=await this.getListMetadata(r.PROJECTS),i=await this.getRequestDigest(),n={__metadata:{type:s}};e.title&&(n.Title=e.title),e.category&&(n.Category=e.category),e.startQuarter&&(n.StartQuarter=e.startQuarter),e.endQuarter&&(n.EndQuarter=e.endQuarter),void 0!==e.description&&(n.Description=e.description),e.status&&(n.Status=e.status.toUpperCase()),void 0!==e.projektleitung&&(n.Projektleitung=e.projektleitung),void 0!==e.bisher&&(n.Bisher=e.bisher),void 0!==e.zukunft&&(n.Zukunft=e.zukunft),void 0!==e.fortschritt&&(n.Fortschritt=e.fortschritt),void 0!==e.geplante_umsetzung&&(n.GeplantUmsetzung=e.geplante_umsetzung),void 0!==e.budget&&(n.Budget=e.budget);let c=await fetch(o,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"MERGE","IF-MATCH":"*","X-RequestDigest":i},body:JSON.stringify(n),credentials:"same-origin"});if(!c.ok){let t=await c.text();throw console.error("Project Update Error Response:",{status:c.status,statusText:c.statusText,url:c.url,body:t,requestBody:JSON.stringify(n)}),Error("Failed to update project: ".concat(c.statusText))}if(e.teamMembers)for(let a of(await this.deleteTeamMembersForProject(t),e.teamMembers))a.name&&a.role&&await this.createTeamMember({name:a.name,role:a.role,projectId:t});if(e.fields){if(await this.deleteFieldsForProject(t),e.fields.process)for(let a of e.fields.process)a&&await this.createField({type:"PROCESS",value:a,projectId:t});if(e.fields.technology)for(let a of e.fields.technology)a&&await this.createField({type:"TECHNOLOGY",value:a,projectId:t});if(e.fields.services)for(let a of e.fields.services)a&&await this.createField({type:"SERVICE",value:a,projectId:t});if(e.fields.data)for(let a of e.fields.data)a&&await this.createField({type:"DATA",value:a,projectId:t})}}catch(e){throw console.error("Error updating project ".concat(t,":"),e),e}}async getUserByEmail(t){try{let e=this.getWebUrl(),a=encodeURIComponent(t),o="".concat(e,"/_api/web/lists/getByTitle('").concat(r.USERS,"')/items?$filter=Email eq '").concat(a,"'&$select=Id,Title,Email,Role,Password"),s=await fetch(o,{method:"GET",headers:{Accept:"application/json;odata=nometadata"},credentials:"same-origin"});if(!s.ok){let t=await s.text();throw console.error("User Fetch Error Response:",{status:s.status,statusText:s.statusText,url:s.url,body:t}),Error("Failed to fetch user: ".concat(s.statusText))}let i=(await s.json()).value||[];if(0===i.length)return null;return{id:i[0].Id.toString(),username:i[0].Email,displayName:i[0].Title,role:i[0].Role||"user",password:i[0].Password}}catch(e){return console.error("Error fetching user by email ".concat(t,":"),e),null}}async createUser(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.USERS,"')/items"),o=await this.getListMetadata(r.USERS),s=await this.getRequestDigest(),i=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-RequestDigest":s},body:JSON.stringify({__metadata:{type:o},Title:t.displayName,Email:t.username,Role:t.role,Password:t.password}),credentials:"same-origin"});if(!i.ok){let e=await i.text();throw console.error("User Create Error Response:",{status:i.status,statusText:i.statusText,url:i.url,body:e,requestBody:JSON.stringify({Title:t.displayName,Email:t.username,Role:t.role,Password:"********"})}),Error("Failed to create user: ".concat(i.statusText))}return{id:(await i.json()).Id.toString(),username:t.username,displayName:t.displayName,role:t.role}}catch(t){throw console.error("Error creating user:",t),t}}async getAllUsers(){try{return(await this.fetchFromSharePoint(r.USERS,"Id,Title,Email,Role")).map(t=>({id:t.Id.toString(),username:t.Email,displayName:t.Title,role:t.Role||"user"}))}catch(t){return console.error("Error fetching users:",t),[]}}async updateUser(t,e){try{let a=this.getWebUrl(),o="".concat(a,"/_api/web/lists/getByTitle('").concat(r.USERS,"')/items(").concat(t,")"),s=await this.getListMetadata(r.USERS),i=await this.getRequestDigest(),n={__metadata:{type:s}};e.displayName&&(n.Title=e.displayName),e.username&&(n.Email=e.username),e.role&&(n.Role=e.role),e.password&&(n.Password=e.password);let c=await fetch(o,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"MERGE","IF-MATCH":"*","X-RequestDigest":i},body:JSON.stringify(n),credentials:"same-origin"});if(!c.ok){let t=await c.text();throw console.error("User Update Error Response:",{status:c.status,statusText:c.statusText,url:c.url,body:t,requestBody:JSON.stringify({...n,Password:n.Password?"********":void 0})}),Error("Failed to update user: ".concat(c.statusText))}}catch(e){throw console.error("Error updating user ".concat(t,":"),e),e}}async deleteUser(t){try{let e=this.getWebUrl(),a="".concat(e,"/_api/web/lists/getByTitle('").concat(r.USERS,"')/items(").concat(t,")"),o=await this.getRequestDigest(),s=await fetch(a,{method:"POST",headers:{Accept:"application/json;odata=nometadata","Content-Type":"application/json;odata=verbose","X-HTTP-Method":"DELETE","IF-MATCH":"*","X-RequestDigest":o},credentials:"same-origin"});if(!s.ok){let t=await s.text();throw console.error("User Delete Error Response:",{status:s.status,statusText:s.statusText,url:s.url,body:t}),Error("Failed to delete user: ".concat(s.statusText))}}catch(e){throw console.error("Error deleting user ".concat(t,":"),e),e}}constructor(){this.metadataCache={},this.requestDigestCache=null}}let s=new o}}]);